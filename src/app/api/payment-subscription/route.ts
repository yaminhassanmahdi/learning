import { stripe } from "../../lib/stripe";
import { NextResponse } from "next/server";

export async function POST(request: Request) {
    try {
        // Check if Stripe is properly configured
        if (!process.env.STRIPE_SECRET_KEY) {
            console.error("STRIPE_SECRET_KEY environment variable is not set");
            return NextResponse.json({ 
                error: "Payment service is not configured properly." 
            }, { status: 500 });
        }

        const session = await stripe.checkout.sessions.create({
            ui_mode: "embedded",
            line_items: [
                {
                    price: 'price_1RWerkRnC9IqMlBs64fZY5px',
                    quantity: 1,
                },
            ],
            // Updated payment method types:
            payment_method_types: [
                'card',
                'amazon_pay', // Already present
                'paypal',     // Already present
                'cashapp',
                'us_bank_account', // For ACH Direct Debit (US)

            ],
            mode: "subscription", // This is for recurring payments
            automatic_tax: { enabled: false },
            allow_promotion_codes: true,
            return_url: `${request.headers.get(
                "origin"
            )}/payment-confirmation?session_id={CHECKOUT_SESSION_ID}`,

        });

        console.log("Stripe session created successfully:", session); // Log successful session

        if (!session.client_secret) {
            console.error("Error: client_secret is null or undefined in the session object!");
            return NextResponse.json({ error: "Client secret not generated by Stripe." }, { status: 500 });
        }

        return NextResponse.json({
            id: session.id,
            client_secret: session.client_secret,
        });
    } catch (err: any) { // Typed err for better logging
        console.error("Error creating Stripe session:", err); // Log the actual error
        return NextResponse.json({
            statusCode: err.statusCode || 500,
            message: err.message || "An error occurred during checkout session creation."
        }, {
            status: err.statusCode || 500, // Use Stripe's error status code if available
        });
    }
}